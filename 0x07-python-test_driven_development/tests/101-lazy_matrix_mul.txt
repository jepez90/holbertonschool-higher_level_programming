===============================
 test for matrix_mul function
===============================

this function could be works when is called with two list of lists as arguments.

    >>> file_name = '101-lazy_matrix_mul'
    >>> function = __import__(file_name).lazy_matrix_mul
    >>> doc_module = __import__(file_name).__doc__

Documentation
===============================

Function is documented
    >>> function.__doc__ != None and function.__doc__.count(' ') > 4
    True

Modulo is Documented
    >>> doc_module != None and doc_module.count(' ') > 4
    True

Holberton Requirements
===============================

first line is #!/usr/bin/python3
    >>> with open(file_name + '.py') as f: print(f.readline())
    #!/usr/bin/python3
    <BLANKLINE>

pep8
    >>> import os
    >>> os.system('pep8 ' + file_name + '.py')
    0

Lists with errors
==============================

firt argument is a list of many types
    >>> function([[1], "hola"] , [[1],[2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

second argument is a list of many types
    >>> function([[1],[2]], [[1], "hola"])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

firt argument is an empty list of lists
    >>> function([], [[1],[2]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

second argument is an empty list of lists
    >>> function([[1],[2]], [])
    Traceback (most recent call last):
    ValueError: m_b can't be empty


corect output
==============================

    >>> function([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]
