===============================
 test for add_integer function
===============================

This function could be works when is called with 2 integers or floats as arguments.

    >>> add_integer = __import__('0-add_integer').add_integer

Numbers
===============================

``add_integer()`` returns the sum of its arguments. For numbers,
that value is equivalent to using the ``+`` operator.

    >>> add_integer(2, 3)
    5
    >>> add_integer(2, -3)
    -1

It also works with floating-point values.

    >>> add_integer(2.0, 3)
    5
    >>> add_integer(2, 3.0)
    5

Non-Numbers
===============================

    >>> add_integer('a', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(8, '3')
    Traceback (most recent call last):
    TypeError: b must be an integer

Non-all-args
===============================

    >>> add_integer(3)
    101
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

